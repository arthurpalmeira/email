{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { FlatList } from 'react-native-gesture-handler';\nimport { FontAwesome } from '@expo/vector-icons';\nimport { StatusBar } from 'expo-status-bar';\nexport default function Entrada(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      emails = _useState2[0],\n      setEmails = _useState2[1];\n\n  useEffect(function () {\n    function getData() {\n      var response, emails;\n      return _regeneratorRuntime.async(function getData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch('https://mobile.ect.ufrn.br:3002/emails'));\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 5:\n              emails = _context.sent;\n              setEmails(emails);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    getData();\n  }, []);\n\n  function renderItem(_ref2) {\n    var item = _ref2.item;\n    return React.createElement(TouchableOpacity, {\n      style: styles.chat,\n      onPress: function onPress() {\n        return navigation.navigate('Email', {\n          id: item.id\n        });\n      }\n    }, React.createElement(View, null, React.createElement(Image, {\n      style: styles.imgPerfil,\n      source: {\n        uri: item.picture\n      }\n    })), React.createElement(View, {\n      style: styles.textbox\n    }, React.createElement(View, {\n      style: styles.perfil\n    }, React.createElement(Text, {\n      style: styles.nomeUsuario\n    }, item.to), React.createElement(Text, {\n      style: styles.mens\n    }, item.tittle)), React.createElement(View, null, React.createElement(Text, {\n      style: styles.time\n    }, item.time), React.createElement(FontAwesome, {\n      name: item.star ? 'star' : 'star-o',\n      size: 22,\n      color: item.star ? \"yellow\" : \"white\",\n      style: styles.star\n    }))));\n  }\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(StatusBar, {\n    style: \"active\"\n  }), React.createElement(FlatList, {\n    data: emails,\n    renderItem: renderItem,\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    showsVerticalScrollIndicator: false\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'darkcyan'\n  },\n  chat: {\n    width: '100%',\n    flexDirection: 'row',\n    margin: 2\n  },\n  imgPerfil: {\n    width: 50,\n    height: 50,\n    borderRadius: 30,\n    margin: 2\n  },\n  textbox: {\n    width: '82%',\n    flexDirection: 'row',\n    margin: 2,\n    justifyContent: 'space-between'\n  },\n  nomeUsuario: {\n    margin: 5,\n    fontWeight: 'bold',\n    color: 'white'\n  },\n  mens: {\n    fontWeight: 'bold',\n    color: 'white'\n  },\n  summary: {\n    color: 'white'\n  },\n  time: {\n    color: 'white',\n    margin: 5\n  },\n  perfil: {\n    flexDirection: 'column'\n  }\n});","map":{"version":3,"sources":["C:/Users/Arthur/Documents/DMPROJ/email/Screens/Entrada.js"],"names":["React","useEffect","useState","FlatList","FontAwesome","StatusBar","Entrada","navigation","emails","setEmails","getData","fetch","response","json","renderItem","item","styles","chat","navigate","id","imgPerfil","uri","picture","textbox","perfil","nomeUsuario","to","mens","tittle","time","star","container","StyleSheet","create","backgroundColor","width","flexDirection","margin","height","borderRadius","justifyContent","fontWeight","color","summary"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {View,Text,Image,StyleSheet,TouchableOpacity} from 'react-native';\r\nimport { FlatList } from 'react-native-gesture-handler';\r\nimport {FontAwesome} from  '@expo/vector-icons';\r\nimport { StatusBar } from 'expo-status-bar';\r\nexport default function Entrada({navigation}){\r\n    const [emails,setEmails] = useState([]);\r\n    useEffect(()=>{\r\n        async function getData(){\r\n          const response = await fetch('https://mobile.ect.ufrn.br:3002/emails');\r\n          const emails = await response.json();\r\n          setEmails(emails);\r\n        }\r\n        getData();\r\n    },[]);\r\n    function renderItem({item}){\r\n        return <TouchableOpacity style={styles.chat} onPress={()=>navigation.navigate('Email', { id: item.id })}>\r\n        <View>\r\n        <Image style={styles.imgPerfil} source={{uri: item.picture}}/>\r\n        </View>\r\n        <View style={styles.textbox}>\r\n            <View style={styles.perfil}>\r\n                <Text style={styles.nomeUsuario}>{item.to}</Text>\r\n                <Text style={styles.mens}>{item.tittle}</Text>\r\n            </View>\r\n            <View>\r\n            <Text style={styles.time}>{item.time}</Text>\r\n            <FontAwesome name={item.star ? 'star'  : 'star-o'}  size={22} color= {item.star ? \"yellow\" : \"white\"} style={styles.star}/>\r\n            </View> \r\n        </View> \r\n    </TouchableOpacity>;\r\n    }\r\n    return(\r\n        <View style={styles.container}>\r\n            <StatusBar style='active'/>\r\n            <FlatList\r\n        data={emails}\r\n        renderItem={renderItem}\r\n        keyExtractor = {item => item.id}\r\n        showsVerticalScrollIndicator ={false}\r\n        />\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container:{\r\n        backgroundColor: 'darkcyan',\r\n        \r\n    },\r\n    chat:{\r\n        width: '100%',\r\n        flexDirection: 'row',    \r\n        margin: 2,\r\n    },\r\n    imgPerfil:{\r\n        width:50,\r\n        height: 50,\r\n        borderRadius: 30,\r\n        margin: 2,\r\n    },\r\n    textbox:{\r\n        width: '82%',\r\n        flexDirection: 'row',\r\n        margin: 2,\r\n        justifyContent: 'space-between',\r\n    },\r\n    nomeUsuario:{\r\n        margin: 5,\r\n        fontWeight:'bold',\r\n        color: 'white',\r\n    },\r\n    mens:{\r\n        fontWeight: 'bold',\r\n        color: 'white',\r\n    },\r\n    summary:{\r\n        color: 'white',\r\n    },\r\n    time:{\r\n        color: 'white',\r\n        margin:5,\r\n    },\r\n    perfil:{\r\n        flexDirection:'column',\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}