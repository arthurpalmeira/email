{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { WebView } from 'react-native-webview';\nimport { FontAwesome } from '@expo/vector-icons';\nimport { StatusBar } from 'expo-status-bar';\nexport default function Email(_ref) {\n  var route = _ref.route;\n  var id = route.params.id;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  useEffect(function () {\n    function getData() {\n      var response, email;\n      return _regeneratorRuntime.async(function getData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch('https://mobile.ect.ufrn.br:3002/emails/' + id));\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 5:\n              email = _context.sent;\n              setEmail(email);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    getData();\n  }, []);\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(View, {\n    style: styles.titulo\n  }, React.createElement(Text, {\n    style: styles.assunto\n  }, email.tittle), React.createElement(FontAwesome, {\n    name: email.star ? 'star' : 'star-o',\n    size: 22,\n    color: email.star ? \"yellow\" : \"white\",\n    style: styles.star\n  })), React.createElement(View, {\n    style: styles.envio\n  }, React.createElement(Image, {\n    source: {\n      uri: email.picture\n    }\n  }), React.createElement(Text, null, email.from), React.createElement(Text, null, email.to), React.createElement(Text, null, email.time)), React.createElement(StatusBar, {\n    style: \"auto\"\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column'\n  },\n  titulo: {\n    width: '98%',\n    flexDirection: 'row',\n    backgroundColor: 'green',\n    justifyContent: 'space-between',\n    marginHorizontal: 5\n  },\n  assunto: {\n    fontWeight: 'bold',\n    fontSize: 22,\n    alignItems: 'center'\n  },\n  envio: {\n    backgroundColor: 'blue',\n    flexDirection: 'row'\n  }\n});","map":{"version":3,"sources":["C:/Users/Arthur/Documents/DMPROJ/email/Screens/Email.js"],"names":["React","useEffect","useState","WebView","FontAwesome","StatusBar","Email","route","id","params","email","setEmail","getData","fetch","response","json","styles","container","titulo","assunto","tittle","star","envio","uri","picture","from","to","time","StyleSheet","create","flex","flexDirection","width","backgroundColor","justifyContent","marginHorizontal","fontWeight","fontSize","alignItems"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;AAEA,SAASC,OAAT,QAAwB,sBAAxB;AACA,SAAQC,WAAR,QAA2B,oBAA3B;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,eAAe,SAASC,KAAT,OAAuB;AAAA,MAAPC,KAAO,QAAPA,KAAO;AAClC,MAAOC,EAAP,GAAaD,KAAK,CAACE,MAAnB,CAAOD,EAAP;;AACA,kBAAyBN,QAAQ,CAAC,EAAD,CAAjC;AAAA;AAAA,MAAOQ,KAAP;AAAA,MAAaC,QAAb;;AACAV,EAAAA,SAAS,CAAC,YAAI;AACV,aAAeW,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACyBC,KAAK,CAAC,4CAA4CL,EAA7C,CAD9B;;AAAA;AACQM,cAAAA,QADR;AAAA;AAAA,+CAEsBA,QAAQ,CAACC,IAAT,EAFtB;;AAAA;AAEQL,cAAAA,KAFR;AAGEC,cAAAA,QAAQ,CAACD,KAAD,CAAR;;AAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKAE,IAAAA,OAAO;AACV,GAPQ,EAOP,EAPO,CAAT;AASA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEI,MAAM,CAACC;AAApB,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE;AAApB,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACG;AAApB,KAA8BT,KAAK,CAACU,MAApC,CADJ,EAEI,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAEV,KAAK,CAACW,IAAN,GAAa,MAAb,GAAuB,QAA1C;AAAqD,IAAA,IAAI,EAAE,EAA3D;AAA+D,IAAA,KAAK,EAAGX,KAAK,CAACW,IAAN,GAAa,QAAb,GAAwB,OAA/F;AAAwG,IAAA,KAAK,EAAEL,MAAM,CAACK;AAAtH,IAFJ,CADJ,EAKI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEL,MAAM,CAACM;AAApB,KACD,oBAAK,KAAL;AAAW,IAAA,MAAM,EAAE;AAACC,MAAAA,GAAG,EAACb,KAAK,CAACc;AAAX;AAAnB,IADC,EAEI,oBAAC,IAAD,QAAOd,KAAK,CAACe,IAAb,CAFJ,EAGI,oBAAC,IAAD,QAAOf,KAAK,CAACgB,EAAb,CAHJ,EAII,oBAAC,IAAD,QAAOhB,KAAK,CAACiB,IAAb,CAJJ,CALJ,EAYI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC;AAAjB,IAZJ,CADJ;AAgBH;AACD,IAAMX,MAAM,GAAGY,UAAU,CAACC,MAAX,CAAkB;AAC7BZ,EAAAA,SAAS,EAAC;AACNa,IAAAA,IAAI,EAAC,CADC;AAENC,IAAAA,aAAa,EAAE;AAFT,GADmB;AAK7Bb,EAAAA,MAAM,EAAC;AACHc,IAAAA,KAAK,EAAC,KADH;AAEHD,IAAAA,aAAa,EAAE,KAFZ;AAGHE,IAAAA,eAAe,EAAE,OAHd;AAIHC,IAAAA,cAAc,EAAE,eAJb;AAKHC,IAAAA,gBAAgB,EAAC;AALd,GALsB;AAY7BhB,EAAAA,OAAO,EAAC;AACJiB,IAAAA,UAAU,EAAE,MADR;AAEJC,IAAAA,QAAQ,EAAE,EAFN;AAGJC,IAAAA,UAAU,EAAE;AAHR,GAZqB;AAiB7BhB,EAAAA,KAAK,EAAC;AACFW,IAAAA,eAAe,EAAE,MADf;AAEFF,IAAAA,aAAa,EAAE;AAFb;AAjBuB,CAAlB,CAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {View,Text,Image,StyleSheet} from 'react-native';\r\nimport { WebView } from 'react-native-webview';\r\nimport {FontAwesome} from  '@expo/vector-icons';\r\nimport { StatusBar } from 'expo-status-bar';\r\nexport default function Email({route}){\r\n    const {id} = route.params;\r\n    const [email,setEmail] = useState([]);\r\n    useEffect(()=>{\r\n        async function getData(){\r\n          const response = await fetch('https://mobile.ect.ufrn.br:3002/emails/' + id);\r\n          const email = await response.json();\r\n          setEmail(email);\r\n        }\r\n        getData();\r\n    },[]);\r\n    \r\n    return(\r\n        <View style={styles.container}>\r\n            <View style={styles.titulo}>\r\n                <Text style={styles.assunto}>{email.tittle}</Text>\r\n                <FontAwesome name={email.star ? 'star'  : 'star-o'}  size={22} color= {email.star ? \"yellow\" : \"white\"} style={styles.star}/>\r\n            </View>\r\n            <View style={styles.envio}>\r\n           <    Image source={{uri:email.picture}}/>\r\n                <Text>{email.from}</Text>\r\n                <Text>{email.to}</Text>\r\n                <Text>{email.time}</Text>\r\n                \r\n            </View>\r\n            <StatusBar style=\"auto\"/>\r\n        </View>\r\n    )\r\n}\r\nconst styles = StyleSheet.create({\r\n    container:{\r\n        flex:1,\r\n        flexDirection: 'column',\r\n    },\r\n    titulo:{\r\n        width:'98%',\r\n        flexDirection: 'row',\r\n        backgroundColor: 'green',\r\n        justifyContent: 'space-between',\r\n        marginHorizontal:5,\r\n    },\r\n    assunto:{\r\n        fontWeight: 'bold',\r\n        fontSize: 22,\r\n        alignItems: 'center'\r\n    },\r\n    envio:{\r\n        backgroundColor: 'blue',\r\n        flexDirection: 'row',\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}